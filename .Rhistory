set.seed(3435)
# install the kernlab package
library(kernlab)
data(spam)
# perform the subsampling
set.seed(3435)
install.packages("kernlab")
# install the kernlab package
library(kernlab)
data(spam)
# perform the subsampling
set.seed(3435)
trainIndicator = rbinom(4601, size = 1, prob = 0.5)
table(trainIndicator)
summary(spam)
head(spam)
source('~/Projects/DataScience/r_playground/spam_example.R')
testSpam = spam[trainIndicator == 0,]
# install the kernlab package
library(kernlab)
data(spam)
# perform the subsampling
set.seed(3435)
trainIndicator = rbinom(4601, size = 1, prob = 0.5)
table(trainIndicator)
trainSpam = spam[trainIndicator == 1,]
testSpam = spam[trainIndicator == 0,]
head(trainSpam)
table(trainSpam$type)
setwd("~/Projects/DataScience/coursera/RepData_PeerAssessment1")
activity_data <- read.csv("activity.csv")
summary(activity_data)
tapply
tapply(activity_data$steps, activity_data$date, FUN = sum)
tapply(activity_data$steps, activity_data$date, FUN = sum, na.rm=TRUE)
steps_per_day <- tapply(activity_data$steps, activity_data$date, FUN = sum, na.rm=TRUE)
head(steps_per_day)
summary(steps_per_day)
steps_per_day <- tapply(activity_data$steps, activity_data$date, FUN = sum, na.rm=TRUE)
histogramm(steps_per_day)
hist(steps_per_day)
head(steps_per_day)
class(steps_per_day)
names(steps_per_day)
?hist
hist(steps_per_day)
hist(steps_per_day, xlab = names(steps_per_day))
hist(steps_per_day, xlab = "Date", ylab = "Number of steps")
hist(steps_per_day, xlab = "Date", ylab = "Number of steps")
plot(steps_per_day)
plot(steps_per_day, type = h)
plot(steps_per_day, type = 'h')
plot(steps_per_day, type = 'h', na.rm = TRUE)
plot(steps_per_day, type = 'S' )
plot(steps_per_day, type = 's' )
plot(steps_per_day)
hist(steps_per_day)
library("swirl")
install.packages("swirl")
library("swirl")
install.packages("swirl")
install.packages("swirl")
install.packages("openssl")
install.packages("swirl")
library("swirl")
ls()
swirl()
data(cars)
?cars
head(cars)
plot(cars)
?plot
skip()
main()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(my_vector, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
skip()
skip()
skip()
swirl()
ls
ls()
rm(list = ls())
```{r}
activity_data <- read.csv("activity.csv")
summary(activity_data)
steps_per_day <- tapply(activity_data$steps, activity_data$date, FUN = sum, na.rm=TRUE)
steps_per_day
head(steps_per_day)
hist(steps_per_day)
class(steps_per_day)
steps_per_day <- sapply(activity_data$steps, activity_data$date, FUN = sum, na.rm=TRUE)
class(steps_per_day)
head(steps_per_day)
dates <- unique(activity_data$date)
class(dates)
length(dates)
length(steps_per_day)
dim(steps_per_day)
steps_per_day <- tapply(activity_data$steps, activity_data$date, FUN = sum, na.rm=TRUE)
dim(steps_per_day)
plot(dates, steps_per_day)
?ggplot2
?ggplot
install.packages("ggplot2")
?qplot
install.packages("qplot")
?ggplot2
?ggplot
library("ggplot2")
?ggplot2
plot(dates, steps_per_day)
barplot(dates, steps_per_day)
?barplot
barplot(steps_per_day)
hist(steps_per_day)
mean(steps_per_day)
median(steps_per_day)
head(activity_data)
?tapply
steps_per_interval <- tapply(activity_data$steps, as.factor(activity_data$interval, activity_data$date), sum, na.rm = TRUE)
list(activity_data$interval, activity_data$date)
tmp <- by(activity_data, activity_data$interval, activity_data$date, FUN = sum)
tmp <- by(activity_data$steps, activity_data$interval, activity_data$date, FUN = sum)
tmp <- by(activity_data$steps, activity_data$interval, activity_data$date, FUN = sum, na.rm = TRUE)
head(tmp)
dim(tmp)
tmp <- by(activity_data$steps, INDICES = list(activity_data$interval, activity_data$date), FUN = sum, na.rm = TRUE)
head(tmp)
dim(tmp)
summary(tmp)
class(tmp)
attributes(by)
dim(tmp)
head(tmp)
str(tmp)
tail(tmp)
head(tmp, n = 20)
head(tmp, n = 200)
tail(tmp, n = 200)
avg_steps_per_interval <- tapply(activity_data$steps, activity_data$date, FUN = mean, na.rm=TRUE)
str(avg_steps_per_interval)
avg_steps_per_interval <- tapply(activity_data$steps, activity_data$interval, FUN = mean, na.rm=TRUE)
head(avg_steps_per_interval)
summary(avg_steps_per_interval)
str(avg_steps_per_interval)
plot(avg_steps_per_interval)
plot(avg_steps_per_interval, type = "l")
plot(avg_steps_per_interval, type = "l", xlab = "Intervals", ylab = "Avarage number of steps")
max(avg_steps_per_interval)
intervals <- unique(activity_data$interval)
dim(intervals)
length(intervals)
length(avg_steps_per_interval)
head(avg_steps_per_interval)
which.max(avg_steps_per_interval)
avg_steps_per_interval[2]
avg_steps_per_interval[835]
max(avg_steps_per_interval)
which.is.max(avg_steps_per_interval)
which(avg_steps_per_interval == max(avg_steps_per_interval))
avg_steps_per_interval(100)
avg_steps_per_interval[100]
avg_steps_per_interval[104]
which.max
max_index <- which.max(avg_steps_per_interval)
max_index
class(max_index)
avg_steps_per_interval[max_index]
head(activity_data)
sum(which(is.na(activity_data)))
dim(activity_data)
is.na(activity_data)
summary(is.na(activity_data))
dim(activity_data)
sum(is.na(activity_data$steps))
missing_values <- is.na(activity_data)
head(missing_values)
missing_values <- is.na(activity_data$steps)
head(missing_values)
length(missing_values)
length(avg_steps_per_interval)
avg_steps_per_interval[104]
avg_steps_per_interval$835
avg_steps_per_interval(835)
head(avg_steps_per_interval)
class(avg_steps_per_interval)
avg_steps_per_interval["835"]
?apply
full_activity_data <- data.frame(activity_data)
function(steps) {}
function(activity, steps) {if (is.na(activity[0])) activity[0] <- steps[as.character(activity[2])]}
fill <- function(activity, steps) {if (is.na(activity[0])) activity[0] <- steps[as.character(activity[2])]}
fill(activity_data[1,], avg_steps_per_interval)
activity_data[1,]
fill(activity, steps) <- function(activity, steps) {if (is.na(activity[0])) activity[0] <- steps[as.character(activity[2])]}
fill <- function(activity, steps) {if (is.na(activity[0])) activity[0] <- steps[as.character(activity[2])]}
fill()
fill(activity_data)
fill(activity_data, avg_steps_per_interval)
is.na(activity_data[1,0])
is.na(activity_data[1,][0])
fill
fill <- function(activity, steps) {if (is.na(activity[0])) { activity[0] <- steps[as.character(activity[2])]}
fill <- function(activity, steps) {if (is.na(activity[0])) { activity[0] <- steps[as.character(activity[2])]}
}
;
exit
return()
;
fill <- function(activity, steps) {if (is.na(activity[0])) { activity[0] <- steps[as.character(activity[2])]}
